
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/INTD%rightUMINUSINTD NAME NUMBERstatement : NAME "=" expressionstatement : expressionexpression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'%\' expression\n                  | expression \',\' expression\n                  | expression INTD expression\n                  | expression \'/\' expressionLIST : \'(\' expression \',\' expression \')\' LIST : \'(\' expression \',\' \')\'LIST : \'(\' \',\' \')\'\n            | \'(\' \')\' expression : LISTexpression : expression \',\' expression : \'-\' expression %prec UMINUSexpression : \'(\' expression \')\'expression : NUMBERexpression : NAME'
    
_lr_action_items = {'NAME':([0,4,6,8,9,10,11,12,13,14,15,30,],[2,17,17,17,17,17,17,17,17,17,17,17,]),'-':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,],[4,-19,10,4,-14,4,-18,4,4,4,4,4,4,4,4,-16,-19,10,-13,10,-3,-4,-5,-6,10,-8,-9,-17,4,-12,10,-11,-10,]),'(':([0,4,6,8,9,10,11,12,13,14,15,30,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'NUMBER':([0,4,6,8,9,10,11,12,13,14,15,30,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'$end':([1,2,3,5,7,13,16,17,19,21,22,23,24,25,26,27,28,29,31,33,34,],[0,-19,-2,-14,-18,-15,-16,-19,-13,-1,-3,-4,-5,-6,-7,-8,-9,-17,-12,-11,-10,]),'=':([2,],[8,]),'+':([2,3,5,7,13,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,],[-19,9,-14,-18,-15,-16,-19,9,-13,9,-3,-4,-5,-6,9,-8,-9,-17,-15,-12,9,-11,-10,]),'*':([2,3,5,7,13,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,],[-19,11,-14,-18,-15,-16,-19,11,-13,11,11,11,-5,-6,11,-8,-9,-17,-15,-12,11,-11,-10,]),'%':([2,3,5,7,13,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,],[-19,12,-14,-18,-15,-16,-19,12,-13,12,12,12,-5,-6,12,-8,-9,-17,-15,-12,12,-11,-10,]),',':([2,3,5,6,7,13,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,],[-19,13,-14,20,-18,-15,-16,-19,30,-13,13,-3,-4,-5,-6,13,-8,-9,-17,-15,-12,13,-11,-10,]),'INTD':([2,3,5,7,13,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,],[-19,14,-14,-18,-15,-16,-19,14,-13,14,14,14,-5,-6,14,-8,-9,-17,-15,-12,14,-11,-10,]),'/':([2,3,5,7,13,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,],[-19,15,-14,-18,-15,-16,-19,15,-13,15,15,15,-5,-6,15,-8,-9,-17,-15,-12,15,-11,-10,]),')':([5,6,7,13,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,],[-14,19,-18,-15,-16,-19,29,-13,31,-3,-4,-5,-6,-7,-8,-9,-17,33,-12,34,-11,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,6,8,9,10,11,12,13,14,15,30,],[3,16,18,21,22,23,24,25,26,27,28,32,]),'LIST':([0,4,6,8,9,10,11,12,13,14,15,30,],[5,5,5,5,5,5,5,5,5,5,5,5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME = expression','statement',3,'p_statement_assign','calcx.py',53),
  ('statement -> expression','statement',1,'p_statement_expr','calcx.py',58),
  ('expression -> expression + expression','expression',3,'p_expression_binop','calcx.py',63),
  ('expression -> expression - expression','expression',3,'p_expression_binop','calcx.py',64),
  ('expression -> expression * expression','expression',3,'p_expression_binop','calcx.py',65),
  ('expression -> expression % expression','expression',3,'p_expression_binop','calcx.py',66),
  ('expression -> expression , expression','expression',3,'p_expression_binop','calcx.py',67),
  ('expression -> expression INTD expression','expression',3,'p_expression_binop','calcx.py',68),
  ('expression -> expression / expression','expression',3,'p_expression_binop','calcx.py',69),
  ('LIST -> ( expression , expression )','LIST',5,'p_list','calcx.py',100),
  ('LIST -> ( expression , )','LIST',4,'p_singleton','calcx.py',106),
  ('LIST -> ( , )','LIST',3,'p_empty_list','calcx.py',111),
  ('LIST -> ( )','LIST',2,'p_empty_list','calcx.py',112),
  ('expression -> LIST','expression',1,'p_expression_list','calcx.py',117),
  ('expression -> expression ,','expression',2,'p_expression_trailing','calcx.py',122),
  ('expression -> - expression','expression',2,'p_expression_uminus','calcx.py',128),
  ('expression -> ( expression )','expression',3,'p_expression_group','calcx.py',133),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcx.py',138),
  ('expression -> NAME','expression',1,'p_expression_name','calcx.py',143),
]
